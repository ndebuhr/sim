name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule: [cron: "42 1 * * *"]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@master
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
    - name: Run Tests
      run: cargo test

  wasm-pack:
    name: Test (wasm)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: rustup update stable && rustup default stable
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Run Tests (wasm-pack)
      run: |
        cargo install --git https://github.com/rustwasm/wasm-pack.git
        wasm-pack test --headless --chrome --firefox sim

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Check Code Formatting
      run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add clippy
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Run Clippy Checks
      run: cargo clippy --all-features -- -Dclippy::all -Dclippy::pedantic || echo "exit $?"
